DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=641, userId=user1, tour=ru.krista.tour.model.data.persistence.entities.Tour#638, status=INTERRUPTED}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour1, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=637, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=true, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=639, userId=user1, tour=ru.krista.tour.model.data.persistence.entities.Tour#637, status=DELAYED}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour2, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=638, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=false, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=640, userId=user2, tour=ru.krista.tour.model.data.persistence.entities.Tour#637, status=INTERRUPTED}
DEBUG main org.hibernate.SQL - 
    insert 
    into
        public.session
        (status, tour_id, user_id, id) 
    values
        (?, ?, ?, ?)
DEBUG main org.hibernate.SQL - 
    insert 
    into
        public.session
        (status, tour_id, user_id, id) 
    values
        (?, ?, ?, ?)
DEBUG main org.hibernate.SQL - 
    insert 
    into
        public.session
        (status, tour_id, user_id, id) 
    values
        (?, ?, ?, ?)
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
DEBUG main org.hibernate.SQL - 
    select
        nextval ('public.hibernate_sequence')
DEBUG main org.hibernate.id.enhanced.SequenceStructure - Sequence value obtained: 642
DEBUG main org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
DEBUG main org.hibernate.event.internal.AbstractSaveEventListener - Generated identifier: 642, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - committing
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 6 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Test, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=642, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=false, desc=}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=641, userId=user1, tour=ru.krista.tour.model.data.persistence.entities.Tour#638, status=INTERRUPTED}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour1, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=637, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=true, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=639, userId=user1, tour=ru.krista.tour.model.data.persistence.entities.Tour#637, status=DELAYED}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour2, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=638, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=false, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=640, userId=user2, tour=ru.krista.tour.model.data.persistence.entities.Tour#637, status=INTERRUPTED}
DEBUG main org.hibernate.SQL - 
    insert 
    into
        public.tour
        (code, code_js, change_date, create_date, description, form_caption, form_name, is_general_user, name, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.SQL - 
    select
        tour0_.id as id1_1_0_,
        tour0_.code as code2_1_0_,
        tour0_.code_js as code_js3_1_0_,
        tour0_.change_date as change_d4_1_0_,
        tour0_.create_date as create_d5_1_0_,
        tour0_.description as descript6_1_0_,
        tour0_.form_caption as form_cap7_1_0_,
        tour0_.form_name as form_nam8_1_0_,
        tour0_.is_general_user as is_gener9_1_0_,
        tour0_.name as name10_1_0_ 
    from
        public.tour tour0_ 
    where
        tour0_.id=?
DEBUG main org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Resolving attributes for [ru.krista.tour.model.data.persistence.entities.Tour#642]
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `code` : value = null
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `codeJS` : value = null
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`codeJS`)  - enhanced for lazy-loading? - false
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `dateChange` : value = 2021-12-13 16:32:05.584
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`dateChange`)  - enhanced for lazy-loading? - false
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `dateCreate` : value = 2021-12-13 16:32:05.584
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`dateCreate`)  - enhanced for lazy-loading? - false
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `desc` : value = 
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`desc`)  - enhanced for lazy-loading? - false
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `formCaption` : value = null
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`formCaption`)  - enhanced for lazy-loading? - false
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `formName` : value = null
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`formName`)  - enhanced for lazy-loading? - false
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `isGeneralUser` : value = false
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`isGeneralUser`)  - enhanced for lazy-loading? - false
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Processing attribute `name` : value = Test
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [ru.krista.tour.model.data.persistence.entities.Tour#642]
DEBUG main org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ru.krista.tour.model.data.persistence.entities.Tour#642
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
DEBUG main org.hibernate.event.internal.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - committing
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 6 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Test, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=642, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=false, desc=Tour description}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=641, userId=user1, tour=ru.krista.tour.model.data.persistence.entities.Tour#638, status=INTERRUPTED}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour1, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=637, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=true, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=639, userId=user1, tour=ru.krista.tour.model.data.persistence.entities.Tour#637, status=DELAYED}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour2, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=638, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=false, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=640, userId=user2, tour=ru.krista.tour.model.data.persistence.entities.Tour#637, status=INTERRUPTED}
DEBUG main org.hibernate.SQL - 
    update
        public.tour 
    set
        code=?,
        code_js=?,
        change_date=?,
        description=?,
        form_caption=?,
        form_name=?,
        is_general_user=?,
        name=? 
    where
        id=?
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 6 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Test, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=642, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=false, desc=Tour description}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=641, userId=user1, tour=ru.krista.tour.model.data.persistence.entities.Tour#638, status=INTERRUPTED}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour1, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=637, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=true, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=639, userId=user1, tour=ru.krista.tour.model.data.persistence.entities.Tour#637, status=DELAYED}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour2, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=638, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=false, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=640, userId=user2, tour=ru.krista.tour.model.data.persistence.entities.Tour#637, status=INTERRUPTED}
DEBUG main org.hibernate.SQL - 
    delete 
    from
        public.tour 
    where
        id=?
DEBUG main org.hibernate.SQL - 
    select
        tour0_.id as id1_1_0_,
        tour0_.code as code2_1_0_,
        tour0_.code_js as code_js3_1_0_,
        tour0_.change_date as change_d4_1_0_,
        tour0_.create_date as create_d5_1_0_,
        tour0_.description as descript6_1_0_,
        tour0_.form_caption as form_cap7_1_0_,
        tour0_.form_name as form_nam8_1_0_,
        tour0_.is_general_user as is_gener9_1_0_,
        tour0_.name as name10_1_0_ 
    from
        public.tour tour0_ 
    where
        tour0_.id=?
DEBUG main org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ru.krista.tour.model.data.persistence.entities.Tour#642
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - committing
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=641, userId=user1, tour=ru.krista.tour.model.data.persistence.entities.Tour#638, status=INTERRUPTED}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour1, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=637, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=true, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=639, userId=user1, tour=ru.krista.tour.model.data.persistence.entities.Tour#637, status=DELAYED}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour2, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=638, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=false, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=640, userId=user2, tour=ru.krista.tour.model.data.persistence.entities.Tour#637, status=INTERRUPTED}
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 5 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=641, userId=user1, tour=ru.krista.tour.model.data.persistence.entities.Tour#638, status=INTERRUPTED}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour1, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=637, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=true, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=639, userId=user1, tour=ru.krista.tour.model.data.persistence.entities.Tour#637, status=DELAYED}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour2, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=638, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=false, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=640, userId=user2, tour=ru.krista.tour.model.data.persistence.entities.Tour#637, status=INTERRUPTED}
DEBUG main org.hibernate.SQL - 
    delete 
    from
        public.session 
    where
        id=?
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=641, userId=user1, tour=ru.krista.tour.model.data.persistence.entities.Tour#638, status=INTERRUPTED}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour1, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=637, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=true, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour2, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=638, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=false, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=640, userId=user2, tour=ru.krista.tour.model.data.persistence.entities.Tour#637, status=INTERRUPTED}
DEBUG main org.hibernate.SQL - 
    delete 
    from
        public.session 
    where
        id=?
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 3 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=641, userId=user1, tour=ru.krista.tour.model.data.persistence.entities.Tour#638, status=INTERRUPTED}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour1, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=637, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=true, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour2, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=638, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=false, desc=null}
DEBUG main org.hibernate.SQL - 
    delete 
    from
        public.session 
    where
        id=?
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 2 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour1, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=637, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=true, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour2, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=638, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=false, desc=null}
DEBUG main org.hibernate.SQL - 
    delete 
    from
        public.tour 
    where
        id=?
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour2, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=638, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=false, desc=null}
DEBUG main org.hibernate.SQL - 
    delete 
    from
        public.tour 
    where
        id=?
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - committing
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
DEBUG main org.hibernate.SQL - 
    select
        nextval ('public.hibernate_sequence')
DEBUG main org.hibernate.id.enhanced.SequenceStructure - Sequence value obtained: 643
DEBUG main org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
DEBUG main org.hibernate.event.internal.AbstractSaveEventListener - Generated identifier: 643, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
DEBUG main org.hibernate.SQL - 
    select
        nextval ('public.hibernate_sequence')
DEBUG main org.hibernate.id.enhanced.SequenceStructure - Sequence value obtained: 644
DEBUG main org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
DEBUG main org.hibernate.event.internal.AbstractSaveEventListener - Generated identifier: 644, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - committing
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour1, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=643, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=true, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour2, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=644, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=false, desc=null}
DEBUG main org.hibernate.SQL - 
    insert 
    into
        public.tour
        (code, code_js, change_date, create_date, description, form_caption, form_name, is_general_user, name, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.SQL - 
    insert 
    into
        public.tour
        (code, code_js, change_date, create_date, description, form_caption, form_name, is_general_user, name, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
DEBUG main org.hibernate.SQL - 
    select
        nextval ('public.hibernate_sequence')
DEBUG main org.hibernate.id.enhanced.SequenceStructure - Sequence value obtained: 645
DEBUG main org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
DEBUG main org.hibernate.event.internal.AbstractSaveEventListener - Generated identifier: 645, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
DEBUG main org.hibernate.SQL - 
    select
        nextval ('public.hibernate_sequence')
DEBUG main org.hibernate.id.enhanced.SequenceStructure - Sequence value obtained: 646
DEBUG main org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
DEBUG main org.hibernate.event.internal.AbstractSaveEventListener - Generated identifier: 646, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
DEBUG main org.hibernate.SQL - 
    select
        nextval ('public.hibernate_sequence')
DEBUG main org.hibernate.id.enhanced.SequenceStructure - Sequence value obtained: 647
DEBUG main org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
DEBUG main org.hibernate.event.internal.AbstractSaveEventListener - Generated identifier: 647, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - committing
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 3 insertions, 0 updates, 0 deletions to 5 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=647, userId=user1, tour=ru.krista.tour.model.data.persistence.entities.Tour#644, status=INTERRUPTED}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour1, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=643, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=true, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=645, userId=user1, tour=ru.krista.tour.model.data.persistence.entities.Tour#643, status=DELAYED}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour2, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=644, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=false, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=646, userId=user2, tour=ru.krista.tour.model.data.persistence.entities.Tour#643, status=INTERRUPTED}
DEBUG main org.hibernate.SQL - 
    insert 
    into
        public.session
        (status, tour_id, user_id, id) 
    values
        (?, ?, ?, ?)
DEBUG main org.hibernate.SQL - 
    insert 
    into
        public.session
        (status, tour_id, user_id, id) 
    values
        (?, ?, ?, ?)
DEBUG main org.hibernate.SQL - 
    insert 
    into
        public.session
        (status, tour_id, user_id, id) 
    values
        (?, ?, ?, ?)
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@61f6d381
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM ru.krista.tour.model.data.persistence.entities.Tour
DEBUG main org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[DOT] Node: '.'
                |  |  |  |  |  +-[DOT] Node: '.'
                |  |  |  |  |  |  +-[IDENT] Node: 'ru'
                |  |  |  |  |  |  \-[IDENT] Node: 'krista'
                |  |  |  |  |  \-[IDENT] Node: 'tour'
                |  |  |  |  \-[IDENT] Node: 'model'
                |  |  |  \-[IDENT] Node: 'data'
                |  |  \-[IDENT] Node: 'persistence'
                |  \-[IDENT] Node: 'entities'
                \-[IDENT] Node: 'Tour'

DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.krista.tour.model.data.persistence.entities.Tour (<no alias>) -> tour0_
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} public.tour tour0_ ) )
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Tour): [public.tour]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Tour)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [public.tour tour0_]
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (public.tour)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'tour0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=public.tour,tableAlias=tour0_,origin=null,columns={,className=ru.krista.tour.model.data.persistence.entities.Tour}}}
    |  \-[SQL_TOKEN] SqlFragment: 'tour0_.code as code2_1_, tour0_.code_js as code_js3_1_, tour0_.change_date as change_d4_1_, tour0_.create_date as create_d5_1_, tour0_.description as descript6_1_, tour0_.form_caption as form_cap7_1_, tour0_.form_name as form_nam8_1_, tour0_.is_general_user as is_gener9_1_, tour0_.name as name10_1_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[tour0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'public.tour tour0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=public.tour,tableAlias=tour0_,origin=null,columns={,className=ru.krista.tour.model.data.persistence.entities.Tour}}

DEBUG main org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM ru.krista.tour.model.data.persistence.entities.Tour
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tour0_.id as id1_1_, tour0_.code as code2_1_, tour0_.code_js as code_js3_1_, tour0_.change_date as change_d4_1_, tour0_.create_date as create_d5_1_, tour0_.description as descript6_1_, tour0_.form_caption as form_cap7_1_, tour0_.form_name as form_nam8_1_, tour0_.is_general_user as is_gener9_1_, tour0_.name as name10_1_ from public.tour tour0_
DEBUG main org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
DEBUG main org.hibernate.SQL - 
    select
        tour0_.id as id1_1_,
        tour0_.code as code2_1_,
        tour0_.code_js as code_js3_1_,
        tour0_.change_date as change_d4_1_,
        tour0_.create_date as create_d5_1_,
        tour0_.description as descript6_1_,
        tour0_.form_caption as form_cap7_1_,
        tour0_.form_name as form_nam8_1_,
        tour0_.is_general_user as is_gener9_1_,
        tour0_.name as name10_1_ 
    from
        public.tour tour0_
DEBUG main org.hibernate.loader.Loader - Result set row: 0
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[ru.krista.tour.model.data.persistence.entities.Tour#643]
DEBUG main org.hibernate.loader.Loader - Result set row: 1
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[ru.krista.tour.model.data.persistence.entities.Tour#644]
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM ru.krista.tour.model.data.persistence.entities.Session
DEBUG main org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[DOT] Node: '.'
                |  |  |  |  |  +-[DOT] Node: '.'
                |  |  |  |  |  |  +-[IDENT] Node: 'ru'
                |  |  |  |  |  |  \-[IDENT] Node: 'krista'
                |  |  |  |  |  \-[IDENT] Node: 'tour'
                |  |  |  |  \-[IDENT] Node: 'model'
                |  |  |  \-[IDENT] Node: 'data'
                |  |  \-[IDENT] Node: 'persistence'
                |  \-[IDENT] Node: 'entities'
                \-[IDENT] Node: 'Session'

DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.krista.tour.model.data.persistence.entities.Session (<no alias>) -> session0_
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} public.session session0_ ) )
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Session): [public.session]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Session)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [public.session session0_]
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (public.session)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'session0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=public.session,tableAlias=session0_,origin=null,columns={,className=ru.krista.tour.model.data.persistence.entities.Session}}}
    |  \-[SQL_TOKEN] SqlFragment: 'session0_.change_date as change_d2_0_, session0_.status as status3_0_, session0_.tour_id as tour_id5_0_, session0_.user_id as user_id4_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[session0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'public.session session0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=public.session,tableAlias=session0_,origin=null,columns={,className=ru.krista.tour.model.data.persistence.entities.Session}}

DEBUG main org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM ru.krista.tour.model.data.persistence.entities.Session
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select session0_.id as id1_0_, session0_.change_date as change_d2_0_, session0_.status as status3_0_, session0_.tour_id as tour_id5_0_, session0_.user_id as user_id4_0_ from public.session session0_
DEBUG main org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
DEBUG main org.hibernate.SQL - 
    select
        session0_.id as id1_0_,
        session0_.change_date as change_d2_0_,
        session0_.status as status3_0_,
        session0_.tour_id as tour_id5_0_,
        session0_.user_id as user_id4_0_ 
    from
        public.session session0_
DEBUG main org.hibernate.loader.Loader - Result set row: 0
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[ru.krista.tour.model.data.persistence.entities.Session#645]
DEBUG main org.hibernate.loader.Loader - Result set row: 1
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[ru.krista.tour.model.data.persistence.entities.Session#646]
DEBUG main org.hibernate.loader.Loader - Result set row: 2
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[ru.krista.tour.model.data.persistence.entities.Session#647]
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.query.criteria.internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Tour as generatedAlias0 where generatedAlias0.isGeneralUser = true
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from ru.krista.tour.model.data.persistence.entities.Tour as generatedAlias0 where generatedAlias0.isGeneralUser = true
DEBUG main org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |     |  |  |  |  |  |  |  \-[IDENT] Node: 'krista'
    |  |     |  |  |  |  |  |  \-[IDENT] Node: 'tour'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'Tour'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'isGeneralUser'
          \-[TRUE] Node: 'true'

DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.krista.tour.model.data.persistence.entities.Tour (generatedAlias0) -> tour0_
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0 -> tour0_.id
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0 -> tour0_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : isGeneralUser -> org.hibernate.type.BooleanType@1ec9bd38
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0.isGeneralUser -> tour0_.is_general_user
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} tour0_.id ) ( FromClause{level=1} public.tour tour0_ ) ( where ( = ( tour0_.is_general_user tour0_.id isGeneralUser ) true ) ) )
DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Tour): [public.tour]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Tour)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Tour)
          | path: generatedAlias0.isGeneralUser
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Tour)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: isGeneralUser
          \-BooleanLiteralNode

DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [public.tour tour0_]
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (public.tour)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'tour0_.id as id1_1_' {alias=generatedAlias0, className=ru.krista.tour.model.data.persistence.entities.Tour, tableAlias=tour0_}
    |  \-[SQL_TOKEN] SqlFragment: 'tour0_.code as code2_1_, tour0_.code_js as code_js3_1_, tour0_.change_date as change_d4_1_, tour0_.create_date as create_d5_1_, tour0_.description as descript6_1_, tour0_.form_caption as form_cap7_1_, tour0_.form_name as form_nam8_1_, tour0_.is_general_user as is_gener9_1_, tour0_.name as name10_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[tour0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'public.tour tour0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=public.tour,tableAlias=tour0_,origin=null,columns={,className=ru.krista.tour.model.data.persistence.entities.Tour}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'tour0_.is_general_user' {propertyName=isGeneralUser,dereferenceType=PRIMITIVE,getPropertyPath=isGeneralUser,path=generatedAlias0.isGeneralUser,tableAlias=tour0_,className=ru.krista.tour.model.data.persistence.entities.Tour,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'tour0_.id' {alias=generatedAlias0, className=ru.krista.tour.model.data.persistence.entities.Tour, tableAlias=tour0_}
          |  \-[IDENT] IdentNode: 'isGeneralUser' {originalText=isGeneralUser}
          \-[TRUE] BooleanLiteralNode: 'true'

DEBUG main org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from ru.krista.tour.model.data.persistence.entities.Tour as generatedAlias0 where generatedAlias0.isGeneralUser = true
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tour0_.id as id1_1_, tour0_.code as code2_1_, tour0_.code_js as code_js3_1_, tour0_.change_date as change_d4_1_, tour0_.create_date as create_d5_1_, tour0_.description as descript6_1_, tour0_.form_caption as form_cap7_1_, tour0_.form_name as form_nam8_1_, tour0_.is_general_user as is_gener9_1_, tour0_.name as name10_1_ from public.tour tour0_ where tour0_.is_general_user=true
DEBUG main org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
DEBUG main org.hibernate.SQL - 
    select
        tour0_.id as id1_1_,
        tour0_.code as code2_1_,
        tour0_.code_js as code_js3_1_,
        tour0_.change_date as change_d4_1_,
        tour0_.create_date as create_d5_1_,
        tour0_.description as descript6_1_,
        tour0_.form_caption as form_cap7_1_,
        tour0_.form_name as form_nam8_1_,
        tour0_.is_general_user as is_gener9_1_,
        tour0_.name as name10_1_ 
    from
        public.tour tour0_ 
    where
        tour0_.is_general_user=true
DEBUG main org.hibernate.loader.Loader - Result set row: 0
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[ru.krista.tour.model.data.persistence.entities.Tour#643]
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.query.criteria.internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0.tour from Session as generatedAlias0 where generatedAlias0.userId=:param0
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0.tour from ru.krista.tour.model.data.persistence.entities.Session as generatedAlias0 where generatedAlias0.userId=:param0
DEBUG main org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |     |  |  |  |  |  |  |  \-[IDENT] Node: 'krista'
    |  |     |  |  |  |  |  |  \-[IDENT] Node: 'tour'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'Session'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'generatedAlias0'
    |        \-[IDENT] Node: 'tour'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.krista.tour.model.data.persistence.entities.Session (generatedAlias0) -> session0_
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0 -> session0_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : tour -> org.hibernate.type.ManyToOneType(ru.krista.tour.model.data.persistence.entities.Tour)
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - dereferenceEntityJoin() : generating join for tour in ru.krista.tour.model.data.persistence.entities.Session (<no alias>) parent = [ {null} ]
DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.krista.tour.model.data.persistence.entities.Tour (<no alias>) -> tour1_
DEBUG main org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : generatedAlias0.tour -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=public.tour,tableAlias=tour1_,origin=public.session session0_,columns={session0_.tour_id,className=ru.krista.tour.model.data.persistence.entities.Tour}}
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0.tour -> session0_.tour_id
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0 -> session0_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : userId -> org.hibernate.type.StringType@64e7619d
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0.userId -> session0_.user_id
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( session0_.tour_id session0_.id tour ) ) ( FromClause{level=1} ( public.session session0_ public.tour tour1_ ) ) ( where ( = ( session0_.user_id session0_.id userId ) ? ) ) )
DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Tour): [public.tour]
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Tour)
    |  | path: generatedAlias0.tour
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Session)
    |  |  | originalText: generatedAlias0
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: tour
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Session)
          | path: generatedAlias0.userId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Session)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: userId
          \-ParameterNode

DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [public.session session0_]
DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [inner join public.tour tour1_ on session0_.tour_id=tour1_.id]
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (public.tour,public.session)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'tour1_.id as id1_1_' {propertyName=tour,dereferenceType=ENTITY,getPropertyPath=tour,path=generatedAlias0.tour,tableAlias=tour1_,className=ru.krista.tour.model.data.persistence.entities.Tour,classAlias=null}
    |  |  +-[ALIAS_REF] IdentNode: 'session0_.id' {alias=generatedAlias0, className=ru.krista.tour.model.data.persistence.entities.Session, tableAlias=session0_}
    |  |  \-[IDENT] IdentNode: 'tour' {originalText=tour}
    |  \-[SQL_TOKEN] SqlFragment: 'tour1_.code as code2_1_, tour1_.code_js as code_js3_1_, tour1_.change_date as change_d4_1_, tour1_.create_date as create_d5_1_, tour1_.description as descript6_1_, tour1_.form_caption as form_cap7_1_, tour1_.form_name as form_nam8_1_, tour1_.is_general_user as is_gener9_1_, tour1_.name as name10_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[tour1_, session0_], fromElementsByPath=[generatedAlias0.tour], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'public.session session0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=public.session,tableAlias=session0_,origin=null,columns={,className=ru.krista.tour.model.data.persistence.entities.Session}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join public.tour tour1_ on session0_.tour_id=tour1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=ru.krista.tour.model.data.persistence.entities.Session.tour,tableName=public.tour,tableAlias=tour1_,origin=public.session session0_,columns={session0_.tour_id,className=ru.krista.tour.model.data.persistence.entities.Tour}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'session0_.user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=generatedAlias0.userId,tableAlias=session0_,className=ru.krista.tour.model.data.persistence.entities.Session,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'session0_.id' {alias=generatedAlias0, className=ru.krista.tour.model.data.persistence.entities.Session, tableAlias=session0_}
          |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@64e7619d}

DEBUG main org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: select generatedAlias0.tour from ru.krista.tour.model.data.persistence.entities.Session as generatedAlias0 where generatedAlias0.userId=:param0
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tour1_.id as id1_1_, tour1_.code as code2_1_, tour1_.code_js as code_js3_1_, tour1_.change_date as change_d4_1_, tour1_.create_date as create_d5_1_, tour1_.description as descript6_1_, tour1_.form_caption as form_cap7_1_, tour1_.form_name as form_nam8_1_, tour1_.is_general_user as is_gener9_1_, tour1_.name as name10_1_ from public.session session0_ inner join public.tour tour1_ on session0_.tour_id=tour1_.id where session0_.user_id=?
DEBUG main org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
DEBUG main org.hibernate.SQL - 
    select
        tour1_.id as id1_1_,
        tour1_.code as code2_1_,
        tour1_.code_js as code_js3_1_,
        tour1_.change_date as change_d4_1_,
        tour1_.create_date as create_d5_1_,
        tour1_.description as descript6_1_,
        tour1_.form_caption as form_cap7_1_,
        tour1_.form_name as form_nam8_1_,
        tour1_.is_general_user as is_gener9_1_,
        tour1_.name as name10_1_ 
    from
        public.session session0_ 
    inner join
        public.tour tour1_ 
            on session0_.tour_id=tour1_.id 
    where
        session0_.user_id=?
DEBUG main org.hibernate.loader.Loader - Result set row: 0
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[ru.krista.tour.model.data.persistence.entities.Tour#643]
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.query.criteria.internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0.tour from Session as generatedAlias0 where ( generatedAlias0.userId=:param0 ) and ( generatedAlias0.status=:param1 )
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0.tour from ru.krista.tour.model.data.persistence.entities.Session as generatedAlias0 where ( generatedAlias0.userId=:param0 ) and ( generatedAlias0.status=:param1 )
DEBUG main org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |     |  |  |  |  |  |  |  \-[IDENT] Node: 'krista'
    |  |     |  |  |  |  |  |  \-[IDENT] Node: 'tour'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'Session'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'generatedAlias0'
    |        \-[IDENT] Node: 'tour'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'userId'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'status'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.krista.tour.model.data.persistence.entities.Session (generatedAlias0) -> session0_
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0 -> session0_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : tour -> org.hibernate.type.ManyToOneType(ru.krista.tour.model.data.persistence.entities.Tour)
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - dereferenceEntityJoin() : generating join for tour in ru.krista.tour.model.data.persistence.entities.Session (<no alias>) parent = [ {null} ]
DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.krista.tour.model.data.persistence.entities.Tour (<no alias>) -> tour1_
DEBUG main org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : generatedAlias0.tour -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=public.tour,tableAlias=tour1_,origin=public.session session0_,columns={session0_.tour_id,className=ru.krista.tour.model.data.persistence.entities.Tour}}
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0.tour -> session0_.tour_id
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0 -> session0_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : userId -> org.hibernate.type.StringType@64e7619d
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0.userId -> session0_.user_id
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0 -> session0_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : status -> org.hibernate.type.StringType@64e7619d
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0.status -> session0_.status
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( session0_.tour_id session0_.id tour ) ) ( FromClause{level=1} ( public.session session0_ public.tour tour1_ ) ) ( where ( and ( = ( session0_.user_id session0_.id userId ) ? ) ( = ( session0_.status session0_.id status ) ? ) ) ) )
DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Tour): [public.tour]
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Tour)
    |  | path: generatedAlias0.tour
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Session)
    |  |  | originalText: generatedAlias0
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: tour
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Session)
          |  | path: generatedAlias0.userId
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Session)
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: userId
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Session)
             | path: generatedAlias0.status
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Session)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: status
             \-ParameterNode

DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [public.session session0_]
DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [inner join public.tour tour1_ on session0_.tour_id=tour1_.id]
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (public.tour,public.session)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'tour1_.id as id1_1_' {propertyName=tour,dereferenceType=ENTITY,getPropertyPath=tour,path=generatedAlias0.tour,tableAlias=tour1_,className=ru.krista.tour.model.data.persistence.entities.Tour,classAlias=null}
    |  |  +-[ALIAS_REF] IdentNode: 'session0_.id' {alias=generatedAlias0, className=ru.krista.tour.model.data.persistence.entities.Session, tableAlias=session0_}
    |  |  \-[IDENT] IdentNode: 'tour' {originalText=tour}
    |  \-[SQL_TOKEN] SqlFragment: 'tour1_.code as code2_1_, tour1_.code_js as code_js3_1_, tour1_.change_date as change_d4_1_, tour1_.create_date as create_d5_1_, tour1_.description as descript6_1_, tour1_.form_caption as form_cap7_1_, tour1_.form_name as form_nam8_1_, tour1_.is_general_user as is_gener9_1_, tour1_.name as name10_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[tour1_, session0_], fromElementsByPath=[generatedAlias0.tour], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'public.session session0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=public.session,tableAlias=session0_,origin=null,columns={,className=ru.krista.tour.model.data.persistence.entities.Session}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join public.tour tour1_ on session0_.tour_id=tour1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=ru.krista.tour.model.data.persistence.entities.Session.tour,tableName=public.tour,tableAlias=tour1_,origin=public.session session0_,columns={session0_.tour_id,className=ru.krista.tour.model.data.persistence.entities.Tour}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'session0_.user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=generatedAlias0.userId,tableAlias=session0_,className=ru.krista.tour.model.data.persistence.entities.Session,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'session0_.id' {alias=generatedAlias0, className=ru.krista.tour.model.data.persistence.entities.Session, tableAlias=session0_}
          |  |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@64e7619d}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'session0_.status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=generatedAlias0.status,tableAlias=session0_,className=ru.krista.tour.model.data.persistence.entities.Session,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'session0_.id' {alias=generatedAlias0, className=ru.krista.tour.model.data.persistence.entities.Session, tableAlias=session0_}
             |  \-[IDENT] IdentNode: 'status' {originalText=status}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@64e7619d}

DEBUG main org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: select generatedAlias0.tour from ru.krista.tour.model.data.persistence.entities.Session as generatedAlias0 where ( generatedAlias0.userId=:param0 ) and ( generatedAlias0.status=:param1 )
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select tour1_.id as id1_1_, tour1_.code as code2_1_, tour1_.code_js as code_js3_1_, tour1_.change_date as change_d4_1_, tour1_.create_date as create_d5_1_, tour1_.description as descript6_1_, tour1_.form_caption as form_cap7_1_, tour1_.form_name as form_nam8_1_, tour1_.is_general_user as is_gener9_1_, tour1_.name as name10_1_ from public.session session0_ inner join public.tour tour1_ on session0_.tour_id=tour1_.id where session0_.user_id=? and session0_.status=?
DEBUG main org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
DEBUG main org.hibernate.SQL - 
    select
        tour1_.id as id1_1_,
        tour1_.code as code2_1_,
        tour1_.code_js as code_js3_1_,
        tour1_.change_date as change_d4_1_,
        tour1_.create_date as create_d5_1_,
        tour1_.description as descript6_1_,
        tour1_.form_caption as form_cap7_1_,
        tour1_.form_name as form_nam8_1_,
        tour1_.is_general_user as is_gener9_1_,
        tour1_.name as name10_1_ 
    from
        public.session session0_ 
    inner join
        public.tour tour1_ 
            on session0_.tour_id=tour1_.id 
    where
        session0_.user_id=? 
        and session0_.status=?
DEBUG main org.hibernate.loader.Loader - Result set row: 0
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[ru.krista.tour.model.data.persistence.entities.Tour#644]
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.query.criteria.internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Session as generatedAlias0 where ( generatedAlias0.userId=:param0 ) and ( generatedAlias0.tour.id=643L )
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from ru.krista.tour.model.data.persistence.entities.Session as generatedAlias0 where ( generatedAlias0.userId=:param0 ) and ( generatedAlias0.tour.id=643L )
DEBUG main org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  |  +-[IDENT] Node: 'ru'
    |  |     |  |  |  |  |  |  |  \-[IDENT] Node: 'krista'
    |  |     |  |  |  |  |  |  \-[IDENT] Node: 'tour'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  |  \-[IDENT] Node: 'persistence'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'Session'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'userId'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'generatedAlias0'
             |  |  \-[IDENT] Node: 'tour'
             |  \-[IDENT] Node: 'id'
             \-[NUM_LONG] Node: '643L'

DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : ru.krista.tour.model.data.persistence.entities.Session (generatedAlias0) -> session0_
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0 -> session0_.id
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0 -> session0_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : userId -> org.hibernate.type.StringType@64e7619d
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0.userId -> session0_.user_id
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0 -> session0_.id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : tour -> org.hibernate.type.ManyToOneType(ru.krista.tour.model.data.persistence.entities.Tour)
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - dereferenceShortcut() : property id in ru.krista.tour.model.data.persistence.entities.Session does not require a join.
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - Unresolved property path is now 'tour.id'
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0.tour -> session0_.tour_id
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : tour.id -> org.hibernate.type.LongType@6f3187b0
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : generatedAlias0.tour.id -> session0_.tour_id
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} session0_.id ) ( FromClause{level=1} public.session session0_ ) ( where ( and ( = ( session0_.user_id session0_.id userId ) ? ) ( = ( session0_.tour_id ( session0_.tour_id session0_.id tour ) id ) 643 ) ) ) )
DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Session): [public.session]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Session)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Session)
          |  | path: generatedAlias0.userId
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Session)
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: userId
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Session)
             | path: generatedAlias0.tour.id
             |  +-DotNode
             |  | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Session)
             |  | path: generatedAlias0.tour
             |  |  +-IdentNode
             |  |  | persister: SingleTableEntityPersister(ru.krista.tour.model.data.persistence.entities.Session)
             |  |  | originalText: generatedAlias0
             |  |  \-IdentNode
             |  |    persister: null
             |  |    originalText: tour
             |  \-IdentNode
             |    persister: null
             |    originalText: id
             \-LiteralNode

DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [public.session session0_]
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (public.session)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'session0_.id as id1_0_' {alias=generatedAlias0, className=ru.krista.tour.model.data.persistence.entities.Session, tableAlias=session0_}
    |  \-[SQL_TOKEN] SqlFragment: 'session0_.change_date as change_d2_0_, session0_.status as status3_0_, session0_.tour_id as tour_id5_0_, session0_.user_id as user_id4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[session0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'public.session session0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=public.session,tableAlias=session0_,origin=null,columns={,className=ru.krista.tour.model.data.persistence.entities.Session}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'session0_.user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=generatedAlias0.userId,tableAlias=session0_,className=ru.krista.tour.model.data.persistence.entities.Session,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'session0_.id' {alias=generatedAlias0, className=ru.krista.tour.model.data.persistence.entities.Session, tableAlias=session0_}
          |  |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@64e7619d}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'session0_.tour_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=tour.id,path=generatedAlias0.tour.id,tableAlias=session0_,className=ru.krista.tour.model.data.persistence.entities.Session,classAlias=generatedAlias0}
             |  +-[DOT] DotNode: 'session0_.tour_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=tour.id,path=generatedAlias0.tour,tableAlias=session0_,className=ru.krista.tour.model.data.persistence.entities.Session,classAlias=generatedAlias0}
             |  |  +-[ALIAS_REF] IdentNode: 'session0_.id' {alias=generatedAlias0, className=ru.krista.tour.model.data.persistence.entities.Session, tableAlias=session0_}
             |  |  \-[IDENT] IdentNode: 'tour' {originalText=tour}
             |  \-[IDENT] IdentNode: 'id' {originalText=id}
             \-[NUM_LONG] LiteralNode: '643'

DEBUG main org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: select generatedAlias0 from ru.krista.tour.model.data.persistence.entities.Session as generatedAlias0 where ( generatedAlias0.userId=:param0 ) and ( generatedAlias0.tour.id=643L )
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select session0_.id as id1_0_, session0_.change_date as change_d2_0_, session0_.status as status3_0_, session0_.tour_id as tour_id5_0_, session0_.user_id as user_id4_0_ from public.session session0_ where session0_.user_id=? and session0_.tour_id=643
DEBUG main org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
DEBUG main org.hibernate.SQL - 
    select
        session0_.id as id1_0_,
        session0_.change_date as change_d2_0_,
        session0_.status as status3_0_,
        session0_.tour_id as tour_id5_0_,
        session0_.user_id as user_id4_0_ 
    from
        public.session session0_ 
    where
        session0_.user_id=? 
        and session0_.tour_id=643
DEBUG main org.hibernate.loader.Loader - Result set row: 0
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[ru.krista.tour.model.data.persistence.entities.Session#645]
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 5 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=647, userId=user1, tour=ru.krista.tour.model.data.persistence.entities.Tour#644, status=INTERRUPTED}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour1, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=643, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=true, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=645, userId=user1, tour=ru.krista.tour.model.data.persistence.entities.Tour#643, status=DELAYED}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour2, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=644, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=false, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=646, userId=user2, tour=ru.krista.tour.model.data.persistence.entities.Tour#643, status=INTERRUPTED}
DEBUG main org.hibernate.SQL - 
    delete 
    from
        public.session 
    where
        id=?
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=647, userId=user1, tour=ru.krista.tour.model.data.persistence.entities.Tour#644, status=INTERRUPTED}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour1, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=643, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=true, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour2, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=644, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=false, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=646, userId=user2, tour=ru.krista.tour.model.data.persistence.entities.Tour#643, status=INTERRUPTED}
DEBUG main org.hibernate.SQL - 
    delete 
    from
        public.session 
    where
        id=?
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 3 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Session{dateChange=null, id=647, userId=user1, tour=ru.krista.tour.model.data.persistence.entities.Tour#644, status=INTERRUPTED}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour1, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=643, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=true, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour2, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=644, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=false, desc=null}
DEBUG main org.hibernate.SQL - 
    delete 
    from
        public.session 
    where
        id=?
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 2 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour1, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=643, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=true, desc=null}
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour2, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=644, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=false, desc=null}
DEBUG main org.hibernate.SQL - 
    delete 
    from
        public.tour 
    where
        id=?
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - ru.krista.tour.model.data.persistence.entities.Tour{code=null, formName=null, name=Tour2, dateChange=Mon Dec 13 16:32:05 MSK 2021, id=644, formCaption=null, codeJS=null, dateCreate=Mon Dec 13 16:32:05 MSK 2021, isGeneralUser=false, desc=null}
DEBUG main org.hibernate.SQL - 
    delete 
    from
        public.tour 
    where
        id=?
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - committing
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
DEBUG main org.jboss.logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG main org.hibernate.jpa.HibernatePersistenceProvider - Located and parsed 2 persistence units; checking each
DEBUG main org.hibernate.jpa.HibernatePersistenceProvider - Checking persistence-unit [name=integration-data-source, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [test-data-source]
DEBUG main org.hibernate.jpa.HibernatePersistenceProvider - Excluding from consideration due to name mis-match
DEBUG main org.hibernate.jpa.HibernatePersistenceProvider - Checking persistence-unit [name=test-data-source, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [test-data-source]
DEBUG main org.hibernate.jpa.boot.spi.ProviderChecker - Persistence-unit [test-data-source] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
DEBUG main org.hibernate.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: test-data-source
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/workspace/github.com/Alevtina98/tour-server/tour/target/test-classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		ru.krista.tour.model.data.persistence.entities.Tour
		ru.krista.tour.model.data.persistence.entities.Session]
	Mapping files names []
	Properties [
		hibernate.default_schema: public
		javax.persistence.schema-generation.drop-script-source: META-INF/import.sql
		javax.persistence.jdbc.user: postgres
		hibernate.dialect: org.hibernate.dialect.PostgreSQL10Dialect
		javax.persistence.jdbc.url: jdbc:postgresql://localhost:5433/test
		hibernate.format_sql: true
		javax.persistence.jdbc.driver: org.postgresql.Driver
		show_sql: false
		hibernate.hbm2ddl.auto: update
		hibernate.show_sql: false
		javax.persistence.jdbc.password: postgre]
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO main org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.21.Final
DEBUG main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
DEBUG main org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG main org.hibernate.cache.internal.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
DEBUG main org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@19976a65
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@19976a65
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@19976a65
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@75c56eb9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3b5fad2d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@102cec62
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2415fc55
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2415fc55
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2415fc55
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1890516e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1890516e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1890516e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@205d38da
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@205d38da
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@205d38da
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7bf3a5d8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7bf3a5d8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7bf3a5d8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5e21e98f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5e21e98f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5e21e98f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7d94beb9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7d94beb9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7d94beb9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4d6025c5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4d6025c5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4d6025c5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4f4c4b1a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4f4c4b1a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3116c353
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3116c353
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3e44f2a5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3e44f2a5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@463fd068
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@42b3b079
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@589da3f3
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@589da3f3
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4c012563
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4c012563
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4bf48f6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4bf48f6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@266374ef
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@266374ef
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6a57ae10
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6a57ae10
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@43599640
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@43599640
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53b7f657
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@53b7f657
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@52e7a6b2
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@52e7a6b2
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f6745d6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f6745d6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6986852
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6986852
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@59d4cd39
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@59d4cd39
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@78a773fd
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@78a773fd
